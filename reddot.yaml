apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: reddot
  namespace: bds
spec:
  version: 8.4.2
  image: harbor.purestorage.int/reddot/elasticsearch:8.4.2
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  nodeSets:
  - name: master
    count: 1
    config:
      node.roles: ["master"]
      thread_pool.snapshot.max: 4
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: fa-direct
    podTemplate:
      spec:
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        imagePullSecrets:
          - name: regcred
        initContainers:
          - name: add-access-keys
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: secret-key
            command:
              - sh
              - -c
              - |
                echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
                echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms6g -Xmx6g
          resources:
            requests:
              memory: 8Gi
              cpu: 1
  - name: data
    count: 3
    config:
      node.roles: ["data_hot", "data_warm", "ingest", "data_cold", "data_content"]
      thread_pool.snapshot.max: 4
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 400Gi
        storageClassName: fa-direct
    podTemplate:
      spec:
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        imagePullSecrets:
          - name: regcred
        initContainers:
          - name: add-access-keys
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: secret-key
            command:
              - sh
              - -c
              - |
                echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
                echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms6g -Xmx6g
          resources:
            requests:
              memory: 8Gi
              cpu: 1
  - name: data-frozen
    count: 1
    config:
      node.roles: ["data_frozen"]
      thread_pool.snapshot.max: 4
      xpack.searchable.snapshot.shared_cache.size: 90gb
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: fb-nfs3
    podTemplate:
      spec:
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        imagePullSecrets:
          - name: regcred
        initContainers:
          - name: add-access-keys
            env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: bds-s3
                  key: secret-key
            command:
              - sh
              - -c
              - |
                echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
                echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms3g -Xmx3g
          resources:
            requests:
              memory: 4Gi
              cpu: 500m

---

apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: reddot
  namespace: bds
spec:
  version: 8.4.2
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  count: 1
  elasticsearchRef:
    name: reddot
  config:
    monitoring.ui.ccs.enabled: false
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 4Gi
            cpu: 1


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana
  namespace: bds
spec:
  rules:
  - host: kibana.purestorage.int
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reddot-kb-http
            port:
              number: 5601

